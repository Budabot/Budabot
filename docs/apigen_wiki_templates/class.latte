{* Print class's summary text, visible on wiki page list *}
{if $class|shortDescription|striptags}
#summary {$class|shortDescription|striptags|strip}
{/if}

{* Print class's title *}
={if $class->deprecated}Deprecated {/if}{if $class->interface}Interface{elseif $class->trait}Trait{else}Class{/if} !{$class->name}=
{if $class->valid}

{* Print class's description *}
{!$class|longDescription|striptags}

{* Print instructions of how this class's instance can be @Inject-ed to module *}
{if $class|getInstanceName}
{{{
There is an instance of this class with name '{$class|getInstanceName}' available.
You can include it into a module via injection:
	/** @Inject */
	public ${$class|getInstanceName};
Or:
	/** @Inject("{$class|getInstanceName}") */
	public $someVariableName;
}}}
{/if}

{* Print class's methods *}
{if $class->ownMethods}
==Methods summary==
{foreach $class->ownMethods as $method}
{var $annotations = $method->annotations}
{block|strip|trim}
||

{* Print method's signature title *}
<h3>{block|strip}
{ifset $annotations['return']}{!$annotations['return'][0]|typeLinks:$method}{/ifset}
{if $method->returnsReference()}&amp;{/if}
{$method->name} (
{foreach $method->parameters as $parameter}
{!$parameter->typeHint|typeLinks:$method}
<var>{if $parameter->passedByReference}&amp; {/if}${$parameter->name}</var>{if $parameter->defaultValueAvailable} = {!$parameter->defaultValueDefinition|highlightPHP:$class}{elseif $parameter->unlimited},…{/if}{sep}, {/sep}
{/foreach}
) _{if !$class->interface && $method->abstract}abstract{elseif $method->final}final{/if} {if $method->protected}protected{elseif $method->private}private{/if} {if $method->static}static{/if}_
{/block}</h3>

{* Print method's description *}
{!$method|shortDescription:true}
{!$method|longDescription}

{* Print information of method's parameters *}
{if $method->parameters && isset($annotations['param'])}
<h4>Parameters</h4>
{foreach $method->parameters as $parameter}
<var>${$parameter->name}</var>{if $parameter->unlimited},…{/if}<br/>
{ifset $annotations['param'][$parameter->position]}{!$annotations['param'][$parameter->position]|annotation:'param':$method|striptags}{/ifset}<br/>
{/foreach}
{/if}

{* Print information of method's return value *}
{if isset($annotations['return']) && 'void' !== $annotations['return'][0]}
<h4>Returns</h4>
{foreach $annotations['return'] as $description}
{!$description|annotation:'return':$method|striptags}<br>
{/foreach}
{/if}

{* Print rest of the method's annotations *}
{foreach $template->annotationSort($template->annotationFilter($annotations, array('deprecated', 'param', 'return', 'throws'))) as $annotation => $descriptions}
<h4>{$annotation|annotationBeautify}</h4>
<div class="list">
{foreach $descriptions as $description}
{if $description}
{!$description|annotation:$annotation:$method}<br>
{/if}
{/foreach}
</div>
{/foreach}
||
{/block}
{/foreach}
{/if}
{* End of methods *}

{* Print class's constants, TODO: Not adjusted yet for wiki printing! *}
{var $ownConstants = $class->ownConstants}
<table class="summary" id="constants" n:if="$ownConstants">
<caption>Constants summary</caption>
<tr n:foreach="$ownConstants as $constant" data-order="{$constant->name}" id="{$constant->name}">
	{var $annotations = $constant->annotations}

	<td class="attributes"><code>
		{ifset $annotations['var']}{!$annotations['var'][0]|typeLinks:$constant}{else}{$constant->value|type}{/ifset}
	</code></td>
	<td class="name"><code>
		{if $class->internal}
			<a href="{$constant|manualUrl}" title="Go to PHP documentation"><b>{$constant->name}</b></a>
		{else}
			<a n:tag-if="$config->sourceCode" href="{$constant|sourceUrl}" title="Go to source code"><b>{$constant->name}</b></a>
		{/if}
	</code></td>
	<td class="value"><code>{!$constant->valueDefinition|highlightValue:$class}</code></td>
	<td class="description"><div>
		<a href="#{$constant->name}" class="anchor">#</a>

		<div class="description short">
			{!$constant|shortDescription:true}
		</div>

		<div n:class="description, detailed">
			{!$constant|longDescription}

			{foreach $template->annotationSort($template->annotationFilter($annotations, array('var'))) as $annotation => $descriptions}
				<h4>{$annotation|annotationBeautify}</h4>
				<div class="list">
				{foreach $descriptions as $description}
					{if $description}
						{!$description|annotation:$annotation:$constant}<br>
					{/if}
				{/foreach}
				</div>
			{/foreach}
		</div>
	</div></td>
</tr>
</table>
{* End of constants *}


{* Print class's properties, TODO: Not adjusted yet for wiki printing! *}
{var $properties = filterOutLogger(filterOutInjects($class->ownProperties))}
{if empty($properties) == false}
==Properties summary==
{foreach $properties as $property}
	{var $annotations = $property->annotations}

	<td class="attributes"><code>
		{if $property->protected}protected{elseif $property->private}private{else}public{/if} {if $property->static}static{/if} {if $property->readOnly}read-only{elseif $property->writeOnly}write-only{/if}
		{!$property->typeHint|typeLinks:$property}
	</code></td>

	<td class="name">
		{if $class->internal}
			<a href="{$property|manualUrl}" title="Go to PHP documentation"><var>${$property->name}</var></a>
		{else}
			<a n:tag-if="$config->sourceCode" href="{$property|sourceUrl}" title="Go to source code"><var>${$property->name}</var></a>
		{/if}
	</td>
	<td class="value"><code>{!$property->defaultValueDefinition|highlightValue:$class}</code></td>
	<td class="description"><div>
		<a href="#${$property->name}" class="anchor">#</a>

		<div class="description short">
			{!$property|shortDescription:true}
		</div>

		<div n:class="description, detailed">
			{!$property|longDescription}

			{foreach $template->annotationSort($template->annotationFilter($annotations, array('var'))) as $annotation => $descriptions}
				<h4>{$annotation|annotationBeautify}</h4>
				<div class="list">
				{foreach $descriptions as $description}
					{if $description}
						{!$description|annotation:$annotation:$property}<br>
					{/if}
				{/foreach}
				</div>
			{/foreach}
		</div>
	</div></td>
{/foreach}
{/if}
{/if}


